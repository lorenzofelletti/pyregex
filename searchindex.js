Search.setIndex({docnames:["index","modules","pyregexp"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":4,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":3,"sphinx.domains.rst":2,"sphinx.domains.std":2,"sphinx.ext.viewcode":1,sphinx:56},filenames:["index.rst","modules.rst","pyregexp.rst"],objects:{"":[[2,0,0,"-","pyregexp"]],"pyregexp.engine":[[2,1,1,"","RegexEngine"]],"pyregexp.engine.RegexEngine":[[2,2,1,"","match"]],"pyregexp.lexer":[[2,1,1,"","Lexer"]],"pyregexp.lexer.Lexer":[[2,2,1,"","scan"]],"pyregexp.match":[[2,1,1,"","Match"]],"pyregexp.pyrser":[[2,1,1,"","Pyrser"]],"pyregexp.pyrser.Pyrser":[[2,2,1,"","parse"]],"pyregexp.re_ast":[[2,1,1,"","ASTNode"],[2,1,1,"","Element"],[2,1,1,"","EndElement"],[2,1,1,"","GroupNode"],[2,1,1,"","LeafNode"],[2,1,1,"","NotNode"],[2,1,1,"","OrNode"],[2,1,1,"","RE"],[2,1,1,"","RangeElement"],[2,1,1,"","SpaceElement"],[2,1,1,"","StartElement"],[2,1,1,"","WildcardElement"]],"pyregexp.re_ast.ASTNode":[[2,3,1,"","id_iter"]],"pyregexp.re_ast.Element":[[2,2,1,"","is_match"]],"pyregexp.re_ast.EndElement":[[2,2,1,"","is_match"]],"pyregexp.re_ast.GroupNode":[[2,2,1,"","is_capturing"]],"pyregexp.re_ast.LeafNode":[[2,2,1,"","is_match"]],"pyregexp.re_ast.RE":[[2,2,1,"","is_capturing"]],"pyregexp.re_ast.RangeElement":[[2,2,1,"","is_match"]],"pyregexp.re_ast.SpaceElement":[[2,2,1,"","is_match"]],"pyregexp.re_ast.StartElement":[[2,2,1,"","is_match"]],"pyregexp.re_ast.WildcardElement":[[2,2,1,"","is_match"]],"pyregexp.tokens":[[2,1,1,"","Asterisk"],[2,1,1,"","Bracket"],[2,1,1,"","Circumflex"],[2,1,1,"","Comma"],[2,1,1,"","CurlyBrace"],[2,1,1,"","Dash"],[2,1,1,"","ElementToken"],[2,1,1,"","End"],[2,1,1,"","EndToken"],[2,1,1,"","Escape"],[2,1,1,"","LeftBracket"],[2,1,1,"","LeftCurlyBrace"],[2,1,1,"","LeftParenthesis"],[2,1,1,"","NotToken"],[2,1,1,"","OneOrMore"],[2,1,1,"","OrToken"],[2,1,1,"","Parenthesis"],[2,1,1,"","Plus"],[2,1,1,"","Quantifier"],[2,1,1,"","QuestionMark"],[2,1,1,"","RightBracket"],[2,1,1,"","RightCurlyBrace"],[2,1,1,"","RightParenthesis"],[2,1,1,"","SpaceToken"],[2,1,1,"","Start"],[2,1,1,"","StartToken"],[2,1,1,"","Token"],[2,1,1,"","VerticalBar"],[2,1,1,"","Wildcard"],[2,1,1,"","WildcardToken"],[2,1,1,"","ZeroOrMore"],[2,1,1,"","ZeroOrOne"]],pyregexp:[[2,0,0,"-","engine"],[2,0,0,"-","lexer"],[2,0,0,"-","match"],[2,0,0,"-","pyrser"],[2,0,0,"-","re_ast"],[2,0,0,"-","tokens"]]},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","method","Python method"],"3":["py","attribute","Python attribute"]},objtypes:{"0":"py:module","1":"py:class","2":"py:method","3":"py:attribute"},terms:{"0":2,"1":2,"2":2,"\u00df":2,"abstract":2,"case":2,"char":2,"class":2,"default":2,"int":2,"return":2,"true":2,A:2,For:2,If:2,It:2,The:2,aabx:2,act:2,all:2,also:2,an:2,ar:2,associ:2,ast:2,asterisk:2,astnod:2,b:2,base:2,been:2,behavior:2,between:2,bool:2,both:2,brace:2,brack:2,bracket:2,bx:2,can:2,captur:2,casefold:2,caus:2,ch:2,charact:2,child:2,children:2,circumflex:2,comma:2,consid:2,consum:2,contain:2,content:1,continu:2,continue_after_match:2,correspond:2,count:2,curli:2,curlybrac:2,custom:2,dash:2,data:2,defin:2,dequ:2,divid:2,e:2,each:2,either:2,element:2,elementtoken:2,end:2,end_ch:2,end_idx:2,endel:2,endtoken:2,engin:1,entri:2,error:2,escap:2,everi:2,exampl:2,except:2,express:2,fals:2,first:2,flag:2,found:2,from:2,g:2,group:2,group_id:2,group_nam:2,groupnod:2,have:2,hierarchi:2,id_it:2,ignor:2,ignore_cas:2,implement:2,index:[0,2],inform:2,inherit:2,input:2,instanc:2,is_captur:2,is_match:2,is_positive_log:2,last:2,leaf:2,leafnod:2,left:2,leftbracket:2,leftcurlybrac:2,leftparenthesi:2,length:2,lexer:1,librari:2,list:2,mai:2,match:1,match_ch:2,match_str:2,mean:2,method:2,model:2,modul:[0,1],more:2,name:2,necessari:2,negat:2,node:2,none:2,not_ch:2,notnod:2,nottoken:2,number:2,object:2,one:2,oneormor:2,option:2,or_ch:2,ornod:2,ortoken:2,otherwis:2,output:2,packag:1,page:0,paramet:2,parenthesi:2,pars:2,parser:2,pass:2,path:2,perform:2,plu:2,point:2,posit:2,possibl:2,present:2,produc:2,pyrser:1,qtifier_char:2,quantifi:2,quantiti:2,questionmark:2,r:2,rais:2,rang:2,rangeel:2,re:2,re_ast:1,recogn:2,regex:2,regexengin:2,regular:2,reng:2,repres:2,result:2,return_match:2,right:2,rightbracket:2,rightcurlybrac:2,rightparenthesi:2,root:2,s:2,scan:2,scanner:2,search:[0,2],side:2,soft:2,some:2,sourc:2,space:2,space_ch:2,spaceel:2,spacetoken:2,special:2,start:2,start_ch:2,start_idx:2,startel:2,starttoken:2,str:2,str_i:2,str_len:2,string:2,structur:2,subgroup:2,submodul:1,subsequ:2,syntax:2,test:2,than:2,thi:2,token:1,tree:2,tupl:2,two:2,type:2,uml:2,unexpect:2,union:2,until:2,us:2,valu:2,verticalbar:2,wa:2,want:2,when:2,where:2,whether:2,whole:2,wildcard:2,wildcard_ch:2,wildcardel:2,wildcardtoken:2,would:2,you:2,zero:2,zeroormor:2,zerooron:2},titles:["Welcome to pyregexp\u2019s documentation!","pyregexp","pyregexp package"],titleterms:{content:2,document:0,engin:2,indic:0,lexer:2,match:2,modul:2,packag:2,pyregexp:[0,1,2],pyrser:2,re_ast:2,s:0,submodul:2,tabl:0,token:2,welcom:0}})